{"version":3,"sources":["config/authentication-api.ts","api/authentication.ts","redux/authentication/slice.ts","config/store.ts","config/resource-api.ts","shared/ImagePlaceholder/index.tsx","api/me.ts","api/me-feed.ts","api/me-suggestions.ts","shared/Button/index.tsx","shared/Avatar/index.tsx","shared/time.ts","routes/path.ts","shared/UserProfileLink/index.tsx","feed/FeedPost/index.tsx","feed/Feed/index.tsx","shared/NormalPageLayout/index.tsx","scss/variables/colors.ts","shared/Loader/index.tsx","shared/PageLoader/index.tsx","shared/ProfilePreview/index.tsx","authentication/useLogout.ts","shared/ProfilePreview/MyProfilePreview/index.tsx","shared/VerticalSplitLayout/index.tsx","api/me-followed.ts","shared/ProfilePreview/UserProfilePreview/index.tsx","suggestions/SideBarSuggestions/index.tsx","pages/IndexPage/index.tsx","shared/Errors/index.tsx","shared/Logo/index.tsx","authentication/AuthenticationForm/index.tsx","shared/error.ts","shared/Input/index.tsx","authentication/access-token.ts","authentication/utils.ts","authentication/LoginForm/index.tsx","shared/ContentCenteredLayout/index.tsx","pages/LoginPage/index.tsx","api/me-profile-image.ts","shared/HiddenFileInput/index.tsx","shared/HiddenImageInput/index.tsx","shared/hooks/useHiddenInput.tsx","shared/hooks/useReadFileFromEvent.ts","shared/InvisibleButton/index.tsx","profile/Stat/index.tsx","profile/ProfileInformation/index.tsx","profile/ProfilePosts/index.tsx","profile/Profile/index.tsx","profile/MyProfile/index.tsx","api/user.ts","api/user-followed.ts","api/user-followers.ts","api/user-post.ts","profile/useFetchProfileInformation.ts","pages/MyProfilePage/index.tsx","api/me-post.ts","shared/Textarea/index.tsx","new-post/NewPostForm/index.tsx","shared/ResponsiveHeading/index.tsx","shared/SlimPageLayout/index.tsx","pages/NewPostPage/index.tsx","authentication/RegisterForm/index.tsx","pages/RegisterPage/index.tsx","suggestions/SuggestionsList/index.tsx","pages/SuggestionsPage/index.tsx","profile/UserProfile/index.tsx","pages/UserProfilePage/index.tsx","shared/ProtectedRoute/index.tsx","routes/renderers.tsx","shared/Header/HeaderLink/index.tsx","shared/Header/AddNewPostLink/index.tsx","shared/Header/index.tsx","routes/Routes/index.tsx","App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["authenticationApi","axios","create","baseURL","register","request","a","post","buildRegisterUrl","response","login","buildLoginUrl","logout","buildLogoutUrl","buildRefreshUrl","initialState","loggedInUserId","undefined","accessToken","refreshToken","slice","createSlice","name","reducers","setState","state","action","payload","setAccessAndRefreshToken","actions","authenticationReducer","reducer","persistConfig","key","storage","combineReducers","authenticationState","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","configurePersistedStore","applicationStore","applicationPersistor","resourceApi","interceptors","use","config","getState","headers","Authorization","isRefreshing","refreshSubscribers","value","error","status","originalRequest","Promise","reject","then","val","dispatch","data","forEach","callback","resolve","push","ImagePlaceholderShape","buildGetMeUrl","buildGetFeedUrl","getSuggestions","get","buildGetSuggestionsUrl","ButtonType","ImagePlaceholder","widthInPx","shape","render","useState","hasLoaded","setHasLoaded","className","style","width","circle","Avatar","publicProfileImageId","username","onLoad","offset","publicId","alt","format","borderRadius","aspectRatio","crop","quality","getDisplayTimeDiffFromNowString","date","displayTimeObj","nowAsMilliseconds","Date","getTime","getTimezoneOffset","dateAsMilliseconds","minutesDiff","Math","floor","hoursDiff","daysDiff","weeksDiff","monthsDiff","diffToReturn","diff","diffType","find","calculateTimeDiffFromNow","getDisplayTimeDiffString","map","Map","set","singular","plural","unitStringObj","Error","unitString","registerPath","loginPath","suggestionsPath","newPostPath","myProfilePath","userProfilePath","UserProfileLink","userId","user","profilePath","useSelector","to","FeedPost","feedPost","creator","square","publicImageId","text","creationTime","Feed","feed","postId","NormalPageLayout","children","textPrimary","Loader","color","size","CircularProgress","PageLoader","isLoading","data-testid","ProfilePreview","avatarSizeInPx","renderUserInformation","renderButton","minWidth","useLogout","useDispatch","isLoggingOut","setIsLoggingOut","requestLogout","Button","buttonType","PrimaryContained","loaderDataTestId","rest","SecondaryContained","PrimaryText","MyProfilePreview","me","handleButtonClick","fullName","onClick","VerticalSplitLayout","addFollow","followedId","buildAddFollowUrl","buildGetLoggedInUsersFollowedUrl","buildDeleteFollowUrl","UserProfilePreview","handleSuccessfulSubscription","loading","setLoading","handleSubscribe","userIdToSubscribeTo","SideBarSuggestions","suggestions","loadSuggestions","suggestion","IndexPage","setFeed","setSuggestions","setMe","useEffect","filter","index","length","Errors","errors","top","bottom","middle","Logo","fontSize","AuthenticationForm","handleSubmit","subTitle","submitButtonCaption","redirectText","redirectButtonText","redirectTo","onSubmit","type","getErrorsArrayFromError","e","isAxiosError","message","axiosError","Input","React","forwardRef","props","ref","AccessTokenParseError","convertAccessAndRefreshTokenResponseToAuthenticationState","accessAndRefreshTokenResponse","sub","jwtDecode","getUserIdFromAccessToken","LoginForm","history","useHistory","useForm","control","setErrors","field","onChange","onBlur","placeholder","ContentCenteredLayout","LoginPage","buildChangeProfileImageUrl","HiddenFileInput","display","HiddenImageInput","accept","useHiddenInput","fileInputRef","useRef","pretendClickOnFileInput","current","click","useReadFileFromEvent","readFileFromEvent","onFileRead","file","target","files","reader","FileReader","readAsDataURL","onloadend","result","InvisibleButton","Stat","number","ProfileInformation","posts","followers","followed","renderAvatar","ProfilePosts","Profile","MyProfile","reloadProfileInformation","avatar","dataUri","imageDataUri","getUser","buildGetUserUrl","getUsersFollowed","buildGetUsersFollowedUrl","getUsersFollowers","buildGetUsersFollowersUrl","getUsersPosts","buildGetUsersPostsUrl","useFetchProfileInformation","setUser","setPosts","setFollowed","setFollowers","useCallback","MyProfilePage","addPost","buildAddPostUrl","Textarea","NewPostForm","caption","setCaption","setIsLoading","handleSubmitButtonClick","src","ResponsiveHeading","SlimPageLayout","NewPostPage","location","useLocation","selectedImageDataUri","RegisterForm","RegisterPage","SuggestionsList","SuggestionsPage","UserProfile","loggedInUsersFollowed","loadLoggedInUsersFollowed","reloadUserInformation","isFollowButtonLoading","setIsFollowButtonLoading","isUnfollowButtonLoading","setIsUnfollowButtonLoading","handleFollowButtonClick","handleUnfollowButtonClick","delete","doesLoggedInUserFollowUser","UserProfilePage","match","useRouteMatch","params","setLoggedInUsersFollowed","ProtectedRoute","renderIndexRoute","route","path","exact","renderRegisterRoute","renderLoginRoute","renderSuggestionsRoute","renderNewPostRoute","renderMyProfileRoute","renderUserProfileRoute","HeaderLink","Icon","ActiveIcon","dataTestId","isActive","pathname","AddNewPostLink","buildNewPostPath","BsPlusCircle","BsPlusCircleFill","Header","BsHouseDoor","BsHouseDoorFill","BsHeart","BsHeartFill","BsPerson","BsPersonFill","Routes","App","cloudName","process","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e4ddbeb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst authenticationApi = axios.create({\r\n  baseURL:\r\n    'https://instagram-clone-spring-boot.herokuapp.com/api/v1/authentication',\r\n});\r\n\r\nexport default authenticationApi;\r\n","import { AxiosResponse } from 'axios';\r\nimport authenticationApi from '../config/authentication-api';\r\n\r\nexport const register = async (request: RegisterRequestDto) => {\r\n  const response: AxiosResponse<AccessAndRefreshTokenResponseDto> =\r\n    await authenticationApi.post(buildRegisterUrl(), {\r\n      ...request,\r\n    });\r\n\r\n  return response;\r\n};\r\n\r\nexport const buildRegisterUrl = () => '/register';\r\n\r\nexport const login = async (request: LoginRequestDto) => {\r\n  const response: AxiosResponse<AccessAndRefreshTokenResponseDto> =\r\n    await authenticationApi.post(buildLoginUrl(), request);\r\n\r\n  return response;\r\n};\r\n\r\nexport const buildLoginUrl = () => '/login';\r\n\r\nexport const logout = async (request: RefreshTokenRequestDto) => {\r\n  return await authenticationApi.post(buildLogoutUrl(), request);\r\n};\r\n\r\nexport const buildLogoutUrl = () => 'logout';\r\n\r\nexport const refresh = (request: RefreshTokenRequestDto) => {\r\n  return authenticationApi.post<AccessAndRefreshTokenResponseDto>(\r\n    buildRefreshUrl(),\r\n    request\r\n  );\r\n};\r\n\r\nexport const buildRefreshUrl = () => '/refreshAccessToken';\r\n\r\nexport type RegisterRequestDto = {\r\n  email: string;\r\n  fullName: string;\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nexport interface RefreshTokenRequestDto {\r\n  refreshToken: string;\r\n}\r\n\r\nexport type LoginRequestDto = {\r\n  usernameOrEmail: string;\r\n  password: string;\r\n};\r\n\r\nexport type AccessAndRefreshTokenResponseDto = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// constants\r\nconst name = 'authentication';\r\n\r\nexport const initialState: AuthenticationState = {\r\n  loggedInUserId: undefined,\r\n  accessToken: '',\r\n  refreshToken: '',\r\n};\r\n\r\n// slice\r\nconst slice = createSlice({\r\n  name,\r\n  initialState,\r\n  reducers: {\r\n    setState(state, action: PayloadAction<AuthenticationState>) {\r\n      const { accessToken, refreshToken, loggedInUserId } = action.payload;\r\n\r\n      state.accessToken = accessToken;\r\n      state.refreshToken = refreshToken;\r\n      state.loggedInUserId = loggedInUserId;\r\n    },\r\n    setAccessAndRefreshToken(\r\n      state,\r\n      action: PayloadAction<{ accessToken: string; refreshToken: string }>\r\n    ) {\r\n      const { accessToken, refreshToken } = action.payload;\r\n\r\n      state.accessToken = accessToken;\r\n      state.refreshToken = refreshToken;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setState, setAccessAndRefreshToken } = slice.actions;\r\nexport const authenticationReducer = slice.reducer;\r\n\r\n// types\r\nexport type AuthenticationState = {\r\n  loggedInUserId?: string;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authenticationReducer } from '../redux/authentication/slice';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  authenticationState: authenticationReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(reducer, composeWithDevTools());\r\n\r\n  return store;\r\n};\r\n\r\nexport const configurePersistedStore = () => {\r\n  const store = createStore(persistedReducer, composeWithDevTools());\r\n  const persistor = persistStore(store);\r\n\r\n  return { store, persistor };\r\n};\r\n\r\nexport type ReduxState = ReturnType<typeof reducer>;\r\nexport type StoreType = ReturnType<typeof configureStore>;\r\n\r\nexport const { store: applicationStore, persistor: applicationPersistor } =\r\n  configurePersistedStore();\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\nimport { refresh } from \"../api/authentication\";\r\nimport {\r\n  initialState,\r\n  setAccessAndRefreshToken,\r\n  setState,\r\n} from \"../redux/authentication/slice\";\r\nimport { applicationStore } from \"./store\";\r\n\r\nconst resourceApi = axios.create({\r\n  baseURL: \"https://instagram-clone-spring-boot.herokuapp.com/api/v1\",\r\n});\r\n\r\nresourceApi.interceptors.request.use((config: AxiosRequestConfig) => {\r\n  const accessToken =\r\n    applicationStore.getState().authenticationState.accessToken;\r\n\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n\r\n  return config;\r\n});\r\n\r\nlet isRefreshing = false;\r\nlet refreshSubscribers: ((accessToken: string) => void)[] = [];\r\n\r\nresourceApi.interceptors.response.use(\r\n  (value) => value,\r\n  (error) => {\r\n    const {\r\n      config,\r\n      response: { status },\r\n    } = error;\r\n    const originalRequest = config;\r\n\r\n    if (status !== 401) {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (!isRefreshing) {\r\n      isRefreshing = true;\r\n\r\n      const refreshToken =\r\n        applicationStore.getState().authenticationState.refreshToken;\r\n\r\n      refresh({ refreshToken }).then(\r\n        (val) => {\r\n          isRefreshing = false;\r\n\r\n          applicationStore.dispatch(setAccessAndRefreshToken(val.data));\r\n\r\n          refreshSubscribers.forEach((callback) =>\r\n            callback(val.data.accessToken)\r\n          );\r\n\r\n          refreshSubscribers = [];\r\n        },\r\n        () => {\r\n          isRefreshing = false;\r\n\r\n          applicationStore.dispatch(setState({ ...initialState }));\r\n\r\n          refreshSubscribers = [];\r\n        }\r\n      );\r\n    }\r\n\r\n    const retryOriginalRequest = new Promise((resolve) => {\r\n      refreshSubscribers.push((accessToken) => {\r\n        originalRequest.headers.Authorization = `Bearer ${accessToken}`;\r\n        resolve(axios(originalRequest));\r\n      });\r\n    });\r\n\r\n    return retryOriginalRequest;\r\n  }\r\n);\r\n\r\nexport default resourceApi;\r\n","import React, { useState } from 'react';\r\nimport './style.scss';\r\n\r\nexport enum ImagePlaceholderShape {\r\n  square,\r\n  circle,\r\n}\r\n\r\nexport interface ImagePlaceholderProps {\r\n  widthInPx: number;\r\n  shape: ImagePlaceholderShape;\r\n  render: (onLoad: () => void) => JSX.Element;\r\n}\r\n\r\nconst ImagePlaceholder: React.FC<ImagePlaceholderProps> = ({\r\n  widthInPx,\r\n  shape,\r\n  render,\r\n}) => {\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n  const onLoad = () => setHasLoaded(true);\r\n\r\n  return (\r\n    <div\r\n      className={`image-placeholder ${\r\n        !hasLoaded ? 'image-placeholder--image-loading' : ''\r\n      }`}\r\n    >\r\n      {render(onLoad)}\r\n      <div\r\n        style={{ width: widthInPx }}\r\n        className={`image-placeholder__placeholder ${\r\n          shape === ImagePlaceholderShape.circle\r\n            ? 'image-placeholder__placeholder--circle'\r\n            : ''\r\n        } ${hasLoaded ? 'image-placeholder__placeholder--image-loaded' : ''}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePlaceholder;\r\n","import resourceApi from '../config/resource-api';\r\nimport { UserResponseDto } from './shared-dtos';\r\n\r\nexport const getMe = () => {\r\n  return resourceApi.get<UserResponseDto>(buildGetMeUrl());\r\n};\r\n\r\nexport const buildGetMeUrl = () => '/me';\r\n","import resourceApi from '../config/resource-api';\r\nimport { UserResponseDto } from './shared-dtos';\r\n\r\nexport const getFeed = () => {\r\n  return resourceApi.get<FeedResponseDto>(buildGetFeedUrl());\r\n};\r\n\r\nexport const buildGetFeedUrl = () => '/me/feed';\r\n\r\nexport interface FeedResponseDto {\r\n  feed: FeedPostResponseDto[];\r\n}\r\n\r\nexport interface FeedPostResponseDto {\r\n  postId: number;\r\n  publicImageId: string;\r\n  text: string;\r\n  creationTime: Date;\r\n  creator: UserResponseDto;\r\n}\r\n","import resourceApi from '../config/resource-api';\r\nimport { UserResponseDto } from './shared-dtos';\r\n\r\nexport const getSuggestions = async () => {\r\n  const response = await resourceApi.get<SuggestionsResponseDto>(\r\n    buildGetSuggestionsUrl()\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport const buildGetSuggestionsUrl = () => '/me/suggestions';\r\n\r\nexport interface SuggestionsResponseDto {\r\n  suggestions: UserResponseDto[];\r\n}\r\n","import React from 'react';\r\nimport { textOnPrimary, textPrimary } from '../../scss/variables';\r\nimport Loader from '../Loader';\r\nimport './style.scss';\r\n\r\nexport enum ButtonType {\r\n  PrimaryContained,\r\n  SecondaryContained,\r\n  PrimaryText,\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends React.DetailedHTMLProps<\r\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  > {\r\n  isLoading?: boolean;\r\n  buttonType?: ButtonType;\r\n  loaderDataTestId?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  isLoading = false,\r\n  buttonType = ButtonType.PrimaryContained,\r\n  loaderDataTestId = 'button-loader',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`button ${\r\n        buttonType === ButtonType.PrimaryContained\r\n          ? 'button--primary-contained'\r\n          : ''\r\n      } ${\r\n        buttonType === ButtonType.SecondaryContained\r\n          ? 'button--secondary-contained'\r\n          : ''\r\n      } ${\r\n        buttonType === ButtonType.PrimaryText ? 'button--primary-text' : ' '\r\n      } ${isLoading ? 'button--loading' : ''}`}\r\n      {...rest}\r\n    >\r\n      {isLoading && (\r\n        <div className='button__spinner' data-testid={loaderDataTestId}>\r\n          <Loader\r\n            size='15px'\r\n            color={`\r\n          ${buttonType === ButtonType.PrimaryContained ? textOnPrimary : ''}\r\n          ${buttonType === ButtonType.SecondaryContained ? textPrimary : ''}\r\n          ${buttonType === ButtonType.PrimaryText ? textPrimary : ''}`}\r\n          />\r\n        </div>\r\n      )}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Image, Transformation } from 'cloudinary-react';\r\nimport React from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport ImagePlaceholder, { ImagePlaceholderShape } from '../ImagePlaceholder';\r\n\r\nexport interface AvatarProps {\r\n  publicProfileImageId?: string;\r\n  widthInPx: number;\r\n  username: string;\r\n}\r\n\r\nconst Avatar: React.FC<AvatarProps> = ({\r\n  publicProfileImageId,\r\n  widthInPx,\r\n  username,\r\n}) => {\r\n  return (\r\n    <ImagePlaceholder\r\n      shape={ImagePlaceholderShape.circle}\r\n      widthInPx={widthInPx}\r\n      render={(onLoad) => (\r\n        <LazyLoad offset={300}>\r\n          <Image\r\n            publicId={\r\n              publicProfileImageId\r\n                ? publicProfileImageId\r\n                : 'instagram-clone/static/blank-profile-image'\r\n            }\r\n            alt={`${username}-profile-image`}\r\n            format='jpg'\r\n            onLoad={onLoad}\r\n            style={{ borderRadius: '50%' }}\r\n          >\r\n            <Transformation\r\n              aspectRatio='1:1'\r\n              crop='fill'\r\n              width={widthInPx}\r\n              quality='100'\r\n            />\r\n          </Image>\r\n        </LazyLoad>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","export const calculateTimeDiffFromNow = (date: Date) => {\r\n  const now = new Date(\r\n    new Date().getTime() + new Date().getTimezoneOffset() * 60000\r\n  );\r\n  const nowAsMilliseconds = now.getTime();\r\n\r\n  const dateAsMilliseconds = new Date(date).getTime();\r\n\r\n  const minutesDiff = Math.floor(\r\n    (nowAsMilliseconds - dateAsMilliseconds) / 60000\r\n  );\r\n\r\n  const hoursDiff = Math.floor(minutesDiff / 60);\r\n\r\n  const daysDiff = Math.floor(hoursDiff / 24);\r\n\r\n  const weeksDiff = Math.floor(daysDiff / 7);\r\n\r\n  const monthsDiff = Math.floor(daysDiff / 30.4167);\r\n\r\n  const yearsDiff = Math.floor(daysDiff / 365);\r\n\r\n  const diffs: Diff[] = [\r\n    { diff: yearsDiff, diffType: 'years' },\r\n    { diff: monthsDiff, diffType: 'months' },\r\n    { diff: weeksDiff, diffType: 'weeks' },\r\n    { diff: daysDiff, diffType: 'days' },\r\n    { diff: hoursDiff, diffType: 'hours' },\r\n    { diff: minutesDiff, diffType: 'minutes' },\r\n  ];\r\n\r\n  let diffToReturn = diffs.find((val) => val.diff > 0);\r\n\r\n  if (!diffToReturn) {\r\n    diffToReturn = { diff: 1, diffType: 'minutes' };\r\n  }\r\n\r\n  return diffToReturn;\r\n};\r\n\r\nexport const getDisplayTimeDiffFromNowString = (date: Date) => {\r\n  const displayTimeObj = calculateTimeDiffFromNow(date);\r\n\r\n  return getDisplayTimeDiffString(displayTimeObj.diff, displayTimeObj.diffType);\r\n};\r\n\r\nexport const getDisplayTimeDiffString = (diff: number, diffType: diffType) => {\r\n  const map = new Map<diffType, { singular: string; plural: string }>();\r\n\r\n  map.set('years', { singular: 'Jahr', plural: 'Jahren' });\r\n  map.set('months', { singular: 'Monat', plural: 'Monaten' });\r\n  map.set('weeks', { singular: 'Woche', plural: 'Wochen' });\r\n  map.set('days', { singular: 'Tag', plural: 'Tagen' });\r\n  map.set('hours', { singular: 'Stunde', plural: 'Stunden' });\r\n  map.set('minutes', { singular: 'Minute', plural: 'Minuten' });\r\n\r\n  const unitStringObj = map.get(diffType);\r\n\r\n  if (!unitStringObj) {\r\n    throw new Error(`No matching unit string could be found for \"${diffType}\"`);\r\n  }\r\n\r\n  const unitString = diff !== 1 ? unitStringObj.plural : unitStringObj.singular;\r\n\r\n  const displayString = `${diff} ${unitString}`;\r\n\r\n  return displayString;\r\n};\r\n\r\ntype Diff = { diff: number; diffType: diffType };\r\n\r\nexport type diffType =\r\n  | 'years'\r\n  | 'months'\r\n  | 'weeks'\r\n  | 'days'\r\n  | 'hours'\r\n  | 'minutes';\r\n","import { NewPostPageState } from '../pages/NewPostPage';\r\n\r\nexport const indexPath = '/';\r\nexport const buildIndexPath = () => '/';\r\n\r\nexport const registerPath = '/register';\r\nexport const buildRegisterPath = () => '/register';\r\n\r\nexport const loginPath = '/login';\r\nexport const buildLoginPath = () => '/login';\r\n\r\nexport const suggestionsPath = '/suggestions';\r\nexport const buildSuggestionsPath = () => '/suggestions';\r\n\r\nexport const newPostPath = '/new-post';\r\nexport const buildNewPostPathname = () => '/new-post';\r\nexport const buildNewPostPath = (state: NewPostPageState) => {\r\n  return {\r\n    pathname: buildNewPostPathname(),\r\n    state,\r\n  };\r\n};\r\n\r\nexport const myProfilePath = '/profiles/me';\r\nexport const buildMyProfilePath = () => '/profiles/me';\r\n\r\nexport const userProfilePath = '/profiles/:userId';\r\nexport const buildUserProfilePath = (userId: string) => `/profiles/${userId}`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport { ReduxState } from '../../config/store';\r\nimport { buildMyProfilePath, buildUserProfilePath } from '../../routes/path';\r\nimport './style.scss';\r\n\r\ninterface UserProfileProps {\r\n  user: UserResponseDto;\r\n}\r\n\r\nconst UserProfileLink: React.FC<UserProfileProps> = ({ user }) => {\r\n  const loggedInUserId = useSelector(\r\n    (state: ReduxState) => state.authenticationState.loggedInUserId\r\n  );\r\n\r\n  const isUserLoggedInUser = loggedInUserId === user.userId;\r\n\r\n  const profilePath = isUserLoggedInUser\r\n    ? buildMyProfilePath()\r\n    : buildUserProfilePath(user.userId);\r\n\r\n  return (\r\n    <Link to={profilePath} className='user-profile-link'>\r\n      {user.username}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default UserProfileLink;\r\n","import { Image, Transformation } from 'cloudinary-react';\r\nimport React from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { FeedPostResponseDto } from '../../api/me-feed';\r\nimport Avatar from '../../shared/Avatar';\r\nimport ImagePlaceholder, {\r\n  ImagePlaceholderShape,\r\n} from '../../shared/ImagePlaceholder';\r\nimport { getDisplayTimeDiffFromNowString } from '../../shared/time';\r\nimport UserProfileLink from '../../shared/UserProfileLink';\r\nimport './style.scss';\r\n\r\nexport interface FeedPostProps {\r\n  feedPost: FeedPostResponseDto;\r\n}\r\n\r\nconst imageWidthInPx = 800;\r\n\r\nconst FeedPost: React.FC<FeedPostProps> = ({ feedPost }) => {\r\n  return (\r\n    <div className='feed-post'>\r\n      <div className='feed-post__top'>\r\n        <Avatar\r\n          username={feedPost.creator.username}\r\n          widthInPx={32}\r\n          publicProfileImageId={feedPost.creator.publicProfileImageId}\r\n        />\r\n\r\n        <UserProfileLink user={feedPost.creator} />\r\n      </div>\r\n\r\n      <div className='feed-post__middle'>\r\n        <ImagePlaceholder\r\n          widthInPx={imageWidthInPx}\r\n          shape={ImagePlaceholderShape.square}\r\n          render={(onLoad) => (\r\n            <LazyLoad offset={500}>\r\n              <Image\r\n                publicId={feedPost.publicImageId}\r\n                alt={feedPost.publicImageId}\r\n                onLoad={onLoad}\r\n                format='jpg'\r\n              >\r\n                <Transformation\r\n                  crop='lfill'\r\n                  width={imageWidthInPx}\r\n                  quality='80'\r\n                />\r\n              </Image>\r\n            </LazyLoad>\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      <div className='feed-post__bottom'>\r\n        {feedPost.text && (\r\n          <div className='feed-post__caption'>\r\n            <UserProfileLink user={feedPost.creator} />{' '}\r\n            <span className='feed-post__caption-text'>{feedPost.text}</span>\r\n          </div>\r\n        )}\r\n\r\n        <div className='feed-post__creation-time'>\r\n          vor {getDisplayTimeDiffFromNowString(feedPost.creationTime)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPost;\r\n","import React from 'react';\r\nimport { FeedPostResponseDto } from '../../api/me-feed';\r\nimport FeedPost from '../FeedPost';\r\n\r\nexport interface FeedProps {\r\n  feed: FeedPostResponseDto[];\r\n}\r\n\r\nconst Feed: React.FC<FeedProps> = ({ feed }) => {\r\n  return (\r\n    <>\r\n      {feed.map((feedPost) => (\r\n        <FeedPost key={feedPost.postId} feedPost={feedPost} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface NormalPageLayoutProps {}\r\n\r\nconst NormalPageLayout: React.FC<NormalPageLayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className='normal-page-layout'>\r\n      <div className='normal-page-layout__content-wrapper'>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NormalPageLayout;\r\n","export const textOnPrimary = 'white';\r\n\r\nexport const textPrimary = 'black';\r\n\r\nexport const border = 'rgb(219, 219, 219)';\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport interface LoaderProps {\r\n  color: string;\r\n  size: string;\r\n}\r\n\r\nconst Loader: React.FC<LoaderProps> = ({ color, size }) => {\r\n  return <CircularProgress size={size} style={{ color: color }} />;\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { border } from '../../scss/variables';\r\nimport Loader from '../Loader';\r\nimport './style.scss';\r\n\r\ninterface PageLoaderProps {\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst PageLoader: React.FC<PageLoaderProps> = ({\r\n  isLoading = true,\r\n  children,\r\n}) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div data-testid='page-loader' className='page-loader'>\r\n          <Loader color={border} size='3rem' />\r\n        </div>\r\n      ) : (\r\n        children\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React from 'react';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport Avatar from '../Avatar';\r\nimport './style.scss';\r\n\r\nexport interface ProfilePreviewProps {\r\n  user: UserResponseDto;\r\n  avatarSizeInPx: number;\r\n  renderUserInformation: () => JSX.Element;\r\n  renderButton: () => JSX.Element;\r\n}\r\n\r\nconst ProfilePreview: React.FC<ProfilePreviewProps> = ({\r\n  user,\r\n  avatarSizeInPx,\r\n  renderUserInformation,\r\n  renderButton,\r\n}) => {\r\n  return (\r\n    <div className='profile-preview'>\r\n      <div style={{ minWidth: avatarSizeInPx }}>\r\n        <Avatar\r\n          publicProfileImageId={user.publicProfileImageId}\r\n          widthInPx={avatarSizeInPx}\r\n          username={user.username}\r\n        />\r\n      </div>\r\n\r\n      <div className='profile-preview__user-information'>\r\n        {renderUserInformation()}\r\n      </div>\r\n\r\n      <div className='profile-preview__button'>{renderButton()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePreview;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout as requestLogout } from '../api/authentication';\r\nimport { ReduxState } from '../config/store';\r\nimport { initialState, setState } from '../redux/authentication/slice';\r\n\r\nexport const useLogout = () => {\r\n  const dispatch = useDispatch();\r\n  const refreshToken = useSelector(\r\n    (state: ReduxState) => state.authenticationState.refreshToken\r\n  );\r\n\r\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n\r\n  const logout = async () => {\r\n    setIsLoggingOut(true);\r\n\r\n    await requestLogout({ refreshToken });\r\n\r\n    dispatch(setState(initialState));\r\n  };\r\n\r\n  return { isLoggingOut, logout };\r\n};\r\n","import React from 'react';\r\nimport ProfilePreview from '..';\r\nimport { UserResponseDto } from '../../../api/shared-dtos';\r\nimport { useLogout } from '../../../authentication/useLogout';\r\nimport Button, { ButtonType } from '../../Button';\r\nimport UserProfileLink from '../../UserProfileLink';\r\nimport './style.scss';\r\n\r\nexport interface MyProfilePreviewProps {\r\n  me: UserResponseDto;\r\n  avatarSizeInPx: number;\r\n}\r\n\r\nconst MyProfilePreview: React.FC<MyProfilePreviewProps> = ({\r\n  me,\r\n  avatarSizeInPx,\r\n}) => {\r\n  const { logout, isLoggingOut } = useLogout();\r\n\r\n  const handleButtonClick = () => logout();\r\n\r\n  const renderUserInformation = () => (\r\n    <>\r\n      <UserProfileLink user={me} />\r\n\r\n      <div className='my-profile-preview__full-name'>{me.fullName}</div>\r\n    </>\r\n  );\r\n\r\n  const renderButton = () => (\r\n    <Button\r\n      isLoading={isLoggingOut}\r\n      buttonType={ButtonType.PrimaryText}\r\n      onClick={handleButtonClick}\r\n    >\r\n      Abmelden\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <ProfilePreview\r\n      user={me}\r\n      avatarSizeInPx={avatarSizeInPx}\r\n      renderUserInformation={renderUserInformation}\r\n      renderButton={renderButton}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyProfilePreview;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst VerticalSplitLayout: React.FC = ({ children }) => {\r\n  return <div className='vertical-split-layout'>{children}</div>;\r\n};\r\n\r\nexport default VerticalSplitLayout;\r\n","import resourceApi from '../config/resource-api';\r\nimport { FollowedResponseDto } from './shared-dtos';\r\n\r\nexport const addFollow = (followedId: string) => {\r\n  return resourceApi.post(buildAddFollowUrl(followedId));\r\n};\r\n\r\nexport const buildAddFollowUrl = (followedId: string) =>\r\n  `me/followed/${followedId}`;\r\n\r\nexport const getLoggedInUsersFollowed = () => {\r\n  return resourceApi.get<FollowedResponseDto>(\r\n    buildGetLoggedInUsersFollowedUrl()\r\n  );\r\n};\r\n\r\nexport const buildGetLoggedInUsersFollowedUrl = () => 'me/followed';\r\n\r\nexport const deleteFollow = (followedId: string) => {\r\n  return resourceApi.delete(buildDeleteFollowUrl(followedId));\r\n};\r\n\r\nexport const buildDeleteFollowUrl = (followedId: string) =>\r\n  `me/followed/${followedId}`;\r\n","import React, { useState } from 'react';\r\nimport ProfilePreview from '..';\r\nimport { addFollow } from '../../../api/me-followed';\r\nimport { UserResponseDto } from '../../../api/shared-dtos';\r\nimport Button, { ButtonType } from '../../Button';\r\nimport UserProfileLink from '../../UserProfileLink';\r\nimport './style.scss';\r\n\r\nexport interface UserProfilePreviewProps {\r\n  user: UserResponseDto;\r\n  avatarSizeInPx: number;\r\n  buttonType: ButtonType;\r\n  handleSuccessfulSubscription: () => void;\r\n}\r\n\r\nconst UserProfilePreview: React.FC<UserProfilePreviewProps> = ({\r\n  user,\r\n  avatarSizeInPx,\r\n  buttonType,\r\n  handleSuccessfulSubscription,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubscribe = async (userIdToSubscribeTo: string) => {\r\n    setLoading(true);\r\n\r\n    await addFollow(userIdToSubscribeTo);\r\n\r\n    handleSuccessfulSubscription();\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const renderUserInformation = () => (\r\n    <>\r\n      <UserProfileLink user={user} />\r\n\r\n      <div className='user-profile-preview__full-name'>{user.fullName}</div>\r\n    </>\r\n  );\r\n\r\n  const renderButton = () => (\r\n    <Button\r\n      isLoading={loading}\r\n      buttonType={buttonType}\r\n      onClick={() => handleSubscribe(user.userId)}\r\n    >\r\n      Abonnieren\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <ProfilePreview\r\n      user={user}\r\n      avatarSizeInPx={avatarSizeInPx}\r\n      renderUserInformation={renderUserInformation}\r\n      renderButton={renderButton}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserProfilePreview;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport { buildSuggestionsPath } from '../../routes/path';\r\nimport { ButtonType } from '../../shared/Button';\r\nimport UserProfilePreview from '../../shared/ProfilePreview/UserProfilePreview';\r\nimport './style.scss';\r\n\r\nexport interface SideBarSuggestionsProps {\r\n  suggestions: UserResponseDto[];\r\n  loadSuggestions: () => Promise<void>;\r\n}\r\n\r\nconst SideBarSuggestions: React.FC<SideBarSuggestionsProps> = ({\r\n  suggestions,\r\n  loadSuggestions,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className='side-bar-suggestions__heading'>\r\n        <span className='side-bar-suggestions__heading-text'>\r\n          Vorschläge für dich\r\n        </span>\r\n        <Link\r\n          className='side-bar-suggestions__all-suggestions-link'\r\n          to={buildSuggestionsPath()}\r\n        >\r\n          Alle ansehen\r\n        </Link>\r\n      </div>\r\n      <div className='side-bar-suggestions__suggestions'>\r\n        {suggestions.map((suggestion) => (\r\n          <div\r\n            key={suggestion.userId}\r\n            className='side-bar-suggestions__suggestion'\r\n          >\r\n            <UserProfilePreview\r\n              user={suggestion}\r\n              avatarSizeInPx={32}\r\n              buttonType={ButtonType.PrimaryText}\r\n              handleSuccessfulSubscription={loadSuggestions}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarSuggestions;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { getMe } from '../../api/me';\r\nimport { FeedPostResponseDto, getFeed } from '../../api/me-feed';\r\nimport { getSuggestions } from '../../api/me-suggestions';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport Feed from '../../feed/Feed';\r\nimport { buildSuggestionsPath } from '../../routes/path';\r\nimport NormalPageLayout from '../../shared/NormalPageLayout';\r\nimport PageLoader from '../../shared/PageLoader';\r\nimport MyProfilePreview from '../../shared/ProfilePreview/MyProfilePreview';\r\nimport VerticalSplitLayout from '../../shared/VerticalSplitLayout';\r\nimport SideBarSuggestions from '../../suggestions/SideBarSuggestions';\r\nimport './style.scss';\r\n\r\nconst IndexPage: React.FC = () => {\r\n  const [feed, setFeed] = useState<FeedPostResponseDto[] | undefined>(\r\n    undefined\r\n  );\r\n  const [suggestions, setSuggestions] = useState<UserResponseDto[] | undefined>(\r\n    undefined\r\n  );\r\n  const [me, setMe] = useState<UserResponseDto | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    getFeed().then((val) => setFeed(val.data.feed));\r\n    getMe().then((val) => setMe(val.data));\r\n    loadSuggestions();\r\n  }, []);\r\n\r\n  const loadSuggestions = async () => {\r\n    const response = await getSuggestions();\r\n\r\n    const suggestions = response.data.suggestions.filter(\r\n      (val, index) => index < 5\r\n    );\r\n\r\n    setSuggestions(suggestions);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!feed || !suggestions || !me ? (\r\n        <PageLoader />\r\n      ) : (\r\n        <>\r\n          {feed.length === 0 ? (\r\n            <Redirect to={buildSuggestionsPath()} />\r\n          ) : (\r\n            <NormalPageLayout>\r\n              <VerticalSplitLayout>\r\n                <div className='index-page__feed'>\r\n                  <Feed feed={feed} />\r\n                </div>\r\n                <div className='index-page__right'>\r\n                  <div className='index-page__my-profile-preview'>\r\n                    <MyProfilePreview me={me} avatarSizeInPx={56} />\r\n                  </div>\r\n\r\n                  <SideBarSuggestions\r\n                    loadSuggestions={loadSuggestions}\r\n                    suggestions={suggestions}\r\n                  />\r\n                </div>\r\n              </VerticalSplitLayout>\r\n            </NormalPageLayout>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  errors: string[];\r\n}\r\n\r\nconst Errors: React.FC<Props> = ({ errors }) => {\r\n  return (\r\n    <div>\r\n      {errors.map((error, index) => {\r\n        const top = errors.length >= 2 && index === 0;\r\n        const bottom = errors.length >= 2 && index === errors.length - 1;\r\n        const middle =\r\n          errors.length >= 3 && index !== 0 && index !== errors.length - 1;\r\n\r\n        return (\r\n          <p\r\n            key={index}\r\n            className={`errors__error ${top ? 'errors__error--top' : ''} ${\r\n              middle ? 'errors__error--middle' : ''\r\n            } ${bottom ? 'errors__error--bottom' : ''}`}\r\n          >\r\n            {error}\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Errors;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport interface LogoProps {\r\n  size: string;\r\n}\r\n\r\nconst Logo: React.FC<LogoProps> = ({ size }) => {\r\n  return (\r\n    <h1 className='logo' style={{ fontSize: size }}>\r\n      Instagram Klon\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../shared/Button';\r\nimport Errors from '../../shared/Errors';\r\nimport Logo from '../../shared/Logo';\r\nimport './style.scss';\r\n\r\nexport interface AuthenticationFormProps {\r\n  handleSubmit: () => void;\r\n  subTitle?: string;\r\n  submitButtonCaption: string;\r\n  redirectText: string;\r\n  redirectButtonText: string;\r\n  redirectTo: string;\r\n  errors: string[];\r\n  isLoading: boolean;\r\n}\r\n\r\nconst AuthenticationForm: React.FC<AuthenticationFormProps> = ({\r\n  handleSubmit,\r\n  subTitle,\r\n  submitButtonCaption,\r\n  redirectText,\r\n  redirectButtonText,\r\n  redirectTo,\r\n  children,\r\n  errors,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    <form className='authentication-form' onSubmit={handleSubmit}>\r\n      <div className='authentication-form__box'>\r\n        <div\r\n          className={\r\n            subTitle\r\n              ? 'authentication-form__logo'\r\n              : 'authentication-form__logo--margin-bottom'\r\n          }\r\n        >\r\n          <Logo size='3rem' />\r\n        </div>\r\n\r\n        <div className='authentication-form__content-wrapper'>\r\n          {subTitle && (\r\n            <p className='authentication-form__sub-title'>{subTitle}</p>\r\n          )}\r\n\r\n          {children}\r\n\r\n          <div className='authentication-form__submit-button'>\r\n            <Button type={'submit'} isLoading={isLoading}>\r\n              {submitButtonCaption}\r\n            </Button>\r\n          </div>\r\n\r\n          {errors.length > 0 && (\r\n            <div className='authentication-form__errors'>\r\n              <Errors errors={errors} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='authentication-form__box'>\r\n        <div className='authentication-form__redirect-text'>\r\n          {redirectText}{' '}\r\n          <Link className='authentication-form__redirect-link' to={redirectTo}>\r\n            {redirectButtonText}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthenticationForm;\r\n","import { AxiosError } from 'axios';\r\n\r\nexport type ErrorResponseDto = {\r\n  errors: string[];\r\n};\r\n\r\nconst isAxiosError = (error: Error): error is AxiosError => {\r\n  return (error as AxiosError).isAxiosError !== undefined;\r\n};\r\n\r\nconst isErrorResponseDto = (response: any): response is ErrorResponseDto => {\r\n  return (response as ErrorResponseDto).errors !== undefined;\r\n};\r\n\r\nexport const getErrorsArrayFromError = (e: Error) => {\r\n  if (!isAxiosError(e)) {\r\n    return [e.message];\r\n  }\r\n\r\n  const axiosError = e as AxiosError<ErrorResponseDto>;\r\n\r\n  if (!axiosError.response || !isErrorResponseDto(axiosError.response.data)) {\r\n    return [axiosError.message];\r\n  }\r\n\r\n  return axiosError.response.data.errors;\r\n};\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface InputProps\r\n  extends React.DetailedHTMLProps<\r\n    React.InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n  > {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => {\r\n  return <input className='input' ref={ref} {...props} />;\r\n});\r\n\r\nexport default Input;\r\n","import jwtDecode, { JwtPayload } from 'jwt-decode';\r\n\r\nexport const getUserIdFromAccessToken = (accessToken: string) => {\r\n  const { sub } = jwtDecode<JwtPayload>(accessToken);\r\n\r\n  if (!sub) {\r\n    throw new AccessTokenParseError(accessToken);\r\n  }\r\n\r\n  return sub;\r\n};\r\n\r\nexport class AccessTokenParseError extends Error {\r\n  constructor(accessToken: string) {\r\n    super(`Das Access-Token (${accessToken}) konnte nicht verarbeitet werden.`);\r\n  }\r\n}\r\n","import { getUserIdFromAccessToken } from './access-token';\r\nimport { AccessAndRefreshTokenResponseDto } from '../api/authentication';\r\nimport { AuthenticationState } from '../redux/authentication/slice';\r\n\r\nexport const convertAccessAndRefreshTokenResponseToAuthenticationState = (\r\n  accessAndRefreshTokenResponse: AccessAndRefreshTokenResponseDto\r\n) => {\r\n  const { accessToken, refreshToken } = accessAndRefreshTokenResponse;\r\n\r\n  const loggedInUserId = getUserIdFromAccessToken(accessToken);\r\n\r\n  const result: AuthenticationState = {\r\n    loggedInUserId,\r\n    accessToken,\r\n    refreshToken,\r\n  };\r\n\r\n  return result;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login, LoginRequestDto } from '../../api/authentication';\r\nimport AuthenticationForm from '../../authentication/AuthenticationForm';\r\nimport { setState } from '../../redux/authentication/slice';\r\nimport { buildIndexPath, buildRegisterPath } from '../../routes/path';\r\nimport { getErrorsArrayFromError } from '../../shared/error';\r\nimport Input from '../../shared/Input';\r\nimport { convertAccessAndRefreshTokenResponseToAuthenticationState } from '../utils';\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { handleSubmit, control } = useForm<LoginRequestDto>();\r\n\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit: SubmitHandler<LoginRequestDto> = async (data) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await login(data);\r\n\r\n      const authenticationState =\r\n        convertAccessAndRefreshTokenResponseToAuthenticationState(\r\n          response.data\r\n        );\r\n\r\n      dispatch(setState(authenticationState));\r\n      history.push(buildIndexPath());\r\n    } catch (e) {\r\n      setErrors(getErrorsArrayFromError(e));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <AuthenticationForm\r\n      handleSubmit={handleSubmit(onSubmit)}\r\n      submitButtonCaption='Anmelden'\r\n      redirectText='Du hast kein Konto?'\r\n      redirectButtonText='Registrieren'\r\n      redirectTo={buildRegisterPath()}\r\n      errors={errors}\r\n      isLoading={loading}\r\n    >\r\n      <Controller\r\n        control={control}\r\n        name='usernameOrEmail'\r\n        render={({ field: { onChange, onBlur, value, ref } }) => (\r\n          <Input\r\n            placeholder='Benutzername oder E-Mail Adresse'\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value || ''}\r\n            ref={ref}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name='password'\r\n        render={({ field: { onChange, onBlur, value, ref } }) => (\r\n          <Input\r\n            placeholder='Passwort'\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value || ''}\r\n            type={'password'}\r\n            ref={ref}\r\n          />\r\n        )}\r\n      />\r\n    </AuthenticationForm>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {}\r\n\r\nconst ContentCenteredLayout: React.FC<Props> = ({ children }) => {\r\n  return <div className='content-centered-layout'>{children}</div>;\r\n};\r\n\r\nexport default ContentCenteredLayout;\r\n","import React from 'react';\r\nimport LoginForm from '../../authentication/LoginForm';\r\nimport ContentCenteredLayout from '../../shared/ContentCenteredLayout';\r\n\r\nconst LoginPage: React.FC = () => {\r\n  return (\r\n    <ContentCenteredLayout>\r\n      <LoginForm />\r\n    </ContentCenteredLayout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import resourceApi from '../config/resource-api';\r\nimport { UserResponseDto } from './shared-dtos';\r\n\r\nexport const changeProfileImage = (request: ProfileImageRequestDto) => {\r\n  return resourceApi.post<UserResponseDto>(\r\n    buildChangeProfileImageUrl(),\r\n    request\r\n  );\r\n};\r\n\r\nexport const buildChangeProfileImageUrl = () => 'me/profile-image';\r\n\r\nexport interface ProfileImageRequestDto {\r\n  imageDataUri: string;\r\n}\r\n","import React from 'react';\r\n\r\nexport interface HiddenFileInputProps\r\n  extends React.DetailedHTMLProps<\r\n    React.InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n  > {}\r\n\r\nconst HiddenFileInput = React.forwardRef<\r\n  HTMLInputElement,\r\n  HiddenFileInputProps\r\n>((props, ref) => {\r\n  return <input type='file' style={{ display: 'none' }} {...props} ref={ref} />;\r\n});\r\n\r\nexport default HiddenFileInput;\r\n","import React from 'react';\r\nimport HiddenFileInput, { HiddenFileInputProps } from '../HiddenFileInput';\r\n\r\nexport interface HiddenImageInputProps extends HiddenFileInputProps {}\r\n\r\nconst HiddenImageInput = React.forwardRef<\r\n  HTMLInputElement,\r\n  HiddenImageInputProps\r\n>((props, ref) => {\r\n  return (\r\n    <HiddenFileInput\r\n      accept={'image/png, image/jpeg, image/webp'}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nexport default HiddenImageInput;\r\n","import { useRef } from 'react';\r\n\r\nexport const useHiddenInput = () => {\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const pretendClickOnFileInput = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  return { fileInputRef, pretendClickOnFileInput };\r\n};\r\n","export const useReadFileFromEvent = () => {\r\n  const readFileFromEvent = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    onFileRead: (dataUri: string) => void\r\n  ) => {\r\n    const file = e.target.files ? e.target.files[0] : null;\r\n\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = async () => {\r\n      if (typeof reader.result !== 'string') {\r\n        return;\r\n      }\r\n\r\n      onFileRead(reader.result);\r\n\r\n      e.target.value = '';\r\n    };\r\n  };\r\n\r\n  return { readFileFromEvent };\r\n};\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport interface InvisibleButtonProps\r\n  extends React.DetailedHTMLProps<\r\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  > {}\r\n\r\nconst InvisibleButton: React.FC<InvisibleButtonProps> = ({\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <button className='invisible-button' {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default InvisibleButton;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport interface StatProps {\r\n  number: number;\r\n  text: string;\r\n}\r\n\r\nconst Stat: React.FC<StatProps> = ({ number, text }) => {\r\n  return (\r\n    <div className='stat'>\r\n      <span className='stat__number'>{number}</span> {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stat;\r\n","import React from 'react';\r\nimport { PostResponseDto, UserResponseDto } from '../../api/shared-dtos';\r\nimport Avatar from '../../shared/Avatar';\r\nimport Stat from '../Stat';\r\nimport './style.scss';\r\n\r\ninterface ProfileInformationProps {\r\n  user: UserResponseDto;\r\n  posts: PostResponseDto[];\r\n  followers: UserResponseDto[];\r\n  followed: UserResponseDto[];\r\n  renderAvatar: (avatar: JSX.Element) => JSX.Element;\r\n  renderButton: () => JSX.Element;\r\n}\r\n\r\nconst ProfileInformation: React.FC<ProfileInformationProps> = ({\r\n  user,\r\n  posts,\r\n  followers,\r\n  followed,\r\n  renderAvatar,\r\n  renderButton,\r\n}) => {\r\n  return (\r\n    <div className='profile-information'>\r\n      <div className='profile-information__image'>\r\n        {renderAvatar(\r\n          <Avatar\r\n            widthInPx={150}\r\n            publicProfileImageId={user.publicProfileImageId}\r\n            username={user.username}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className='profile-information__details'>\r\n        <div className='profile-information__username-and-button'>\r\n          <h2 className='profile-information__username'>{user.username}</h2>\r\n\r\n          {renderButton()}\r\n        </div>\r\n\r\n        <div className='profile-information__stats'>\r\n          <Stat number={posts.length} text='Beiträge' />\r\n          <Stat number={followers.length} text='Abonennten' />\r\n          <Stat number={followed.length} text='abonniert' />\r\n        </div>\r\n\r\n        <h1 className='profile-information__full-name'>{user.fullName}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInformation;\r\n","import { Image, Transformation } from 'cloudinary-react';\r\nimport React from 'react';\r\nimport { BsGrid3X3 } from 'react-icons/bs';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { PostResponseDto } from '../../api/shared-dtos';\r\nimport ImagePlaceholder, {\r\n  ImagePlaceholderShape,\r\n} from '../../shared/ImagePlaceholder';\r\nimport './style.scss';\r\n\r\ninterface ProfilePostsProps {\r\n  posts: PostResponseDto[];\r\n}\r\n\r\nconst imageWidthInPx = 300;\r\n\r\nconst ProfilePosts: React.FC<ProfilePostsProps> = ({ posts }) => {\r\n  return (\r\n    <div>\r\n      <div className='profile-posts__heading-wrapper'>\r\n        <div className='profile-posts__heading'>\r\n          <BsGrid3X3 size={12} />\r\n          <span className='profile-posts__heading-text'>BEITRÄGE</span>\r\n        </div>\r\n      </div>\r\n\r\n      {posts.length === 0 ? (\r\n        <div className='profile-posts__no-posts-placeholder'>\r\n          Noch keine Beiträge vorhanden\r\n        </div>\r\n      ) : (\r\n        <div className='profile-posts__posts'>\r\n          {posts.map((post) => (\r\n            <ImagePlaceholder\r\n              key={post.postId}\r\n              widthInPx={imageWidthInPx}\r\n              shape={ImagePlaceholderShape.square}\r\n              render={(onLoad) => (\r\n                <LazyLoad offset={100}>\r\n                  <Image\r\n                    publicId={post.publicImageId}\r\n                    alt={post.publicImageId}\r\n                    onLoad={onLoad}\r\n                    format='jpg'\r\n                  >\r\n                    <Transformation\r\n                      aspectRatio='1:1'\r\n                      crop='fill'\r\n                      width={imageWidthInPx}\r\n                      quality='80'\r\n                    />\r\n                  </Image>\r\n                </LazyLoad>\r\n              )}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePosts;\r\n","import React from 'react';\r\nimport { PostResponseDto, UserResponseDto } from '../../api/shared-dtos';\r\nimport ProfileInformation from '../ProfileInformation';\r\nimport ProfilePosts from '../ProfilePosts';\r\n\r\nexport interface ProfileProps {\r\n  user: UserResponseDto;\r\n  posts: PostResponseDto[];\r\n  followers: UserResponseDto[];\r\n  followed: UserResponseDto[];\r\n  renderAvatar: (avatar: JSX.Element) => JSX.Element;\r\n  renderButton: () => JSX.Element;\r\n}\r\n\r\nconst Profile: React.FC<ProfileProps> = (props) => {\r\n  return (\r\n    <>\r\n      <ProfileInformation {...props} />\r\n      <ProfilePosts posts={props.posts} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { changeProfileImage } from '../../api/me-profile-image';\r\nimport { PostResponseDto, UserResponseDto } from '../../api/shared-dtos';\r\nimport { useLogout } from '../../authentication/useLogout';\r\nimport Button, { ButtonType } from '../../shared/Button';\r\nimport HiddenImageInput from '../../shared/HiddenImageInput';\r\nimport { useHiddenInput } from '../../shared/hooks/useHiddenInput';\r\nimport { useReadFileFromEvent } from '../../shared/hooks/useReadFileFromEvent';\r\nimport InvisibleButton from '../../shared/InvisibleButton';\r\nimport Profile from '../Profile';\r\n\r\nexport interface MyProfileProps {\r\n  user: UserResponseDto;\r\n  posts: PostResponseDto[];\r\n  followers: UserResponseDto[];\r\n  followed: UserResponseDto[];\r\n  reloadProfileInformation: () => void;\r\n}\r\n\r\nconst MyProfile: React.FC<MyProfileProps> = ({\r\n  reloadProfileInformation,\r\n  ...rest\r\n}) => {\r\n  const { isLoggingOut, logout } = useLogout();\r\n  const { readFileFromEvent } = useReadFileFromEvent();\r\n\r\n  const { fileInputRef, pretendClickOnFileInput } = useHiddenInput();\r\n\r\n  const renderButton = () => {\r\n    const handleButtonClick = () => {\r\n      logout();\r\n    };\r\n\r\n    return (\r\n      <Button\r\n        isLoading={isLoggingOut}\r\n        buttonType={ButtonType.SecondaryContained}\r\n        onClick={handleButtonClick}\r\n      >\r\n        Abmelden\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const renderAvatar = (avatar: JSX.Element) => {\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      readFileFromEvent(e, async (dataUri) => {\r\n        await changeProfileImage({ imageDataUri: dataUri });\r\n\r\n        reloadProfileInformation();\r\n      });\r\n    };\r\n\r\n    return (\r\n      <InvisibleButton onClick={() => pretendClickOnFileInput()}>\r\n        <HiddenImageInput\r\n          ref={fileInputRef}\r\n          data-testid='change-profile-image-hidden-file-input'\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        {avatar}\r\n      </InvisibleButton>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Profile\r\n      {...rest}\r\n      renderButton={renderButton}\r\n      renderAvatar={renderAvatar}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import resourceApi from '../config/resource-api';\r\nimport { UserResponseDto } from './shared-dtos';\r\n\r\nexport const getUser = async (userId: string) => {\r\n  return await resourceApi.get<UserResponseDto>(buildGetUserUrl(userId));\r\n};\r\n\r\nexport const buildGetUserUrl = (userId: string) => {\r\n  return `/users/${userId}`;\r\n};\r\n","import resourceApi from '../config/resource-api';\r\nimport { FollowedResponseDto } from './shared-dtos';\r\n\r\nexport const getUsersFollowed = async (userId: string) => {\r\n  return await resourceApi.get<FollowedResponseDto>(\r\n    buildGetUsersFollowedUrl(userId)\r\n  );\r\n};\r\n\r\nexport const buildGetUsersFollowedUrl = (userId: string) => {\r\n  return `/users/${userId}/followed`;\r\n};\r\n","import resourceApi from '../config/resource-api';\r\nimport { UserResponseDto } from '../api/shared-dtos';\r\n\r\nexport const getUsersFollowers = async (userId: string) => {\r\n  return await resourceApi.get<FollowersResponseDto>(\r\n    buildGetUsersFollowersUrl(userId)\r\n  );\r\n};\r\n\r\nexport const buildGetUsersFollowersUrl = (userId: string) => {\r\n  return `/users/${userId}/followers`;\r\n};\r\n\r\nexport interface FollowersResponseDto {\r\n  followers: UserResponseDto[];\r\n}\r\n","import resourceApi from '../config/resource-api';\r\nimport { PostsResponseDto } from './shared-dtos';\r\n\r\nexport const getUsersPosts = async (userId: string) => {\r\n  return await resourceApi.get<PostsResponseDto>(buildGetUsersPostsUrl(userId));\r\n};\r\n\r\nexport const buildGetUsersPostsUrl = (userId: string) => {\r\n  return `/users/${userId}/posts`;\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { PostResponseDto, UserResponseDto } from '../api/shared-dtos';\r\nimport { getUser } from '../api/user';\r\nimport { getUsersFollowed } from '../api/user-followed';\r\nimport { getUsersFollowers } from '../api/user-followers';\r\nimport { getUsersPosts } from '../api/user-post';\r\n\r\nexport const useFetchProfileInformation = (userId: string) => {\r\n  const [user, setUser] = useState<UserResponseDto | undefined>(undefined);\r\n  const [posts, setPosts] = useState<PostResponseDto[] | undefined>(undefined);\r\n  const [followed, setFollowed] = useState<UserResponseDto[] | undefined>(\r\n    undefined\r\n  );\r\n  const [followers, setFollowers] = useState<UserResponseDto[] | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const reloadProfileInformation = useCallback(() => {\r\n    getUser(userId).then((value) => setUser(value.data));\r\n    getUsersPosts(userId).then((value) => setPosts(value.data.posts));\r\n    getUsersFollowers(userId).then((value) =>\r\n      setFollowers(value.data.followers)\r\n    );\r\n    getUsersFollowed(userId).then((value) => setFollowed(value.data.followed));\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    reloadProfileInformation();\r\n  }, [reloadProfileInformation]);\r\n\r\n  return {\r\n    user,\r\n    posts,\r\n    followed,\r\n    followers,\r\n    reloadProfileInformation,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ReduxState } from '../../config/store';\r\nimport MyProfile from '../../profile/MyProfile';\r\nimport { useFetchProfileInformation } from '../../profile/useFetchProfileInformation';\r\nimport NormalPageLayout from '../../shared/NormalPageLayout';\r\nimport PageLoader from '../../shared/PageLoader';\r\n\r\nconst MyProfilePage: React.FC = () => {\r\n  const { loggedInUserId } = useSelector(\r\n    (state: ReduxState) => state.authenticationState\r\n  );\r\n\r\n  const { user, posts, followers, followed, reloadProfileInformation } =\r\n    useFetchProfileInformation(loggedInUserId!);\r\n\r\n  return (\r\n    <>\r\n      {!user || !posts || !followers || !followed ? (\r\n        <PageLoader />\r\n      ) : (\r\n        <NormalPageLayout>\r\n          <MyProfile\r\n            user={user}\r\n            posts={posts}\r\n            followers={followers}\r\n            followed={followed}\r\n            reloadProfileInformation={reloadProfileInformation}\r\n          />\r\n        </NormalPageLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyProfilePage;\r\n","import resourceApi from '../config/resource-api';\r\nimport { PostRequestDto, PostResponseDto } from './shared-dtos';\r\n\r\nexport const addPost = async (request: PostRequestDto) => {\r\n  return await resourceApi.post<PostResponseDto>(buildAddPostUrl(), request);\r\n};\r\n\r\nexport const buildAddPostUrl = () => '/me/posts';\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport interface TextareaProps\r\n  extends React.DetailedHTMLProps<\r\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\r\n    HTMLTextAreaElement\r\n  > {}\r\n\r\nconst Textarea: React.FC<TextareaProps> = (props) => {\r\n  return <textarea className='textarea' {...props} />;\r\n};\r\n\r\nexport default Textarea;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { addPost } from '../../api/me-post';\r\nimport { PostRequestDto } from '../../api/shared-dtos';\r\nimport { buildIndexPath } from '../../routes/path';\r\nimport Button from '../../shared/Button';\r\nimport { getErrorsArrayFromError } from '../../shared/error';\r\nimport Errors from '../../shared/Errors';\r\nimport Textarea from '../../shared/Textarea';\r\nimport './style.scss';\r\n\r\nexport interface NewPostFormProps {\r\n  imageDataUri: string;\r\n}\r\n\r\nconst NewPostForm: React.FC<NewPostFormProps> = ({ imageDataUri }) => {\r\n  const history = useHistory();\r\n\r\n  const [caption, setCaption] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n\r\n  const handleSubmitButtonClick = async () => {\r\n    setIsLoading(true);\r\n\r\n    const request: PostRequestDto = {\r\n      imageDataUri,\r\n      text: caption,\r\n    };\r\n\r\n    try {\r\n      await addPost(request);\r\n\r\n      history.push(buildIndexPath());\r\n    } catch (e) {\r\n      setErrors(getErrorsArrayFromError(e));\r\n\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='new-post-form'>\r\n      <div className='new-post-form__caption-input'>\r\n        <Textarea\r\n          placeholder='Bildunterschrift verfassen ...'\r\n          value={caption}\r\n          onChange={(e) => setCaption(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className='new-post-form__image-preview-container'>\r\n        <div className='new-post-form__image-preview-crop-size'>\r\n          <img\r\n            className='new-post-form__image-preview'\r\n            src={imageDataUri}\r\n            alt='selectedImagePreview'\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='new-post-form__bottom-section'>\r\n        {errors.length > 0 && (\r\n          <div className='new-post-form__errors'>\r\n            <Errors errors={errors} />\r\n          </div>\r\n        )}\r\n\r\n        <div className='new-post-form__submit-button'>\r\n          <Button isLoading={isLoading} onClick={handleSubmitButtonClick}>\r\n            Teilen\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPostForm;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport interface ResponsiveHeadingProps {}\r\n\r\nconst ResponsiveHeading: React.FC<ResponsiveHeadingProps> = ({ children }) => {\r\n  return <h1 className='responsive-heading'>{children}</h1>;\r\n};\r\n\r\nexport default ResponsiveHeading;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface SlimPageLayoutProps {}\r\n\r\nconst SlimPageLayout: React.FC<SlimPageLayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className='slim-page-layout'>\r\n      <div className='slim-page-layout__content-wrapper'>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlimPageLayout;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport NewPostForm from '../../new-post/NewPostForm';\r\nimport ResponsiveHeading from '../../shared/ResponsiveHeading';\r\nimport SlimPageLayout from '../../shared/SlimPageLayout';\r\n\r\nexport interface NewPostPageState {\r\n  selectedImageDataUri: string;\r\n}\r\n\r\nconst NewPostPage: React.FC = () => {\r\n  const location = useLocation<NewPostPageState>();\r\n\r\n  return (\r\n    <SlimPageLayout>\r\n      <ResponsiveHeading>Neuer Beitrag</ResponsiveHeading>\r\n\r\n      <NewPostForm imageDataUri={location.state.selectedImageDataUri} />\r\n    </SlimPageLayout>\r\n  );\r\n};\r\n\r\nexport default NewPostPage;\r\n","import React, { useState } from 'react';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { register, RegisterRequestDto } from '../../api/authentication';\r\nimport AuthenticationForm from '../../authentication/AuthenticationForm';\r\nimport { convertAccessAndRefreshTokenResponseToAuthenticationState } from '../../authentication/utils';\r\nimport { setState } from '../../redux/authentication/slice';\r\nimport { buildLoginPath } from '../../routes/path';\r\nimport { getErrorsArrayFromError } from '../../shared/error';\r\nimport Input from '../../shared/Input';\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { handleSubmit, control } = useForm<RegisterRequestDto>();\r\n\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit: SubmitHandler<RegisterRequestDto> = async (data) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await register(data);\r\n\r\n      const payload = convertAccessAndRefreshTokenResponseToAuthenticationState(\r\n        response.data\r\n      );\r\n\r\n      dispatch(setState(payload));\r\n      history.push('/');\r\n    } catch (e) {\r\n      setErrors(getErrorsArrayFromError(e));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <AuthenticationForm\r\n      handleSubmit={handleSubmit(onSubmit)}\r\n      subTitle='Registriere dich, um die Fotos und Videos deiner Freunde zu sehen.'\r\n      submitButtonCaption='Registrieren'\r\n      redirectText='Du hast ein Konto?'\r\n      redirectButtonText='Melde dich an'\r\n      redirectTo={buildLoginPath()}\r\n      errors={errors}\r\n      isLoading={loading}\r\n    >\r\n      <Controller\r\n        control={control}\r\n        name='email'\r\n        render={({ field: { onChange, onBlur, value, ref } }) => (\r\n          <Input\r\n            placeholder='E-Mail Adresse'\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value || ''}\r\n            ref={ref}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name='fullName'\r\n        render={({ field: { onChange, onBlur, value, ref } }) => (\r\n          <Input\r\n            placeholder={'Vollständiger Name'}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value || ''}\r\n            ref={ref}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name='username'\r\n        render={({ field: { onChange, onBlur, value, ref } }) => (\r\n          <Input\r\n            placeholder='Benutzername'\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value || ''}\r\n            ref={ref}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name='password'\r\n        render={({ field: { onChange, onBlur, value, ref } }) => (\r\n          <Input\r\n            type='password'\r\n            placeholder='Passwort'\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value || ''}\r\n            ref={ref}\r\n          />\r\n        )}\r\n      />\r\n    </AuthenticationForm>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from '../../authentication/RegisterForm';\r\nimport ContentCenteredLayout from '../../shared/ContentCenteredLayout';\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  return (\r\n    <ContentCenteredLayout>\r\n      <RegisterForm />\r\n    </ContentCenteredLayout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport { ButtonType } from '../../shared/Button';\r\nimport UserProfilePreview from '../../shared/ProfilePreview/UserProfilePreview';\r\nimport './style.scss';\r\n\r\ninterface SuggestionsListProps {\r\n  suggestions: UserResponseDto[];\r\n  loadSuggestions: () => void;\r\n}\r\n\r\nconst SuggestionsList: React.FC<SuggestionsListProps> = ({\r\n  suggestions,\r\n  loadSuggestions,\r\n}) => {\r\n  return (\r\n    <div className='suggestions-list'>\r\n      {suggestions.map((suggestion, index) => {\r\n        return (\r\n          <div key={suggestion.userId} className='suggestions-list__suggestion'>\r\n            <UserProfilePreview\r\n              key={index}\r\n              user={suggestion}\r\n              avatarSizeInPx={44}\r\n              buttonType={ButtonType.PrimaryContained}\r\n              handleSuccessfulSubscription={() => loadSuggestions()}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestionsList;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { getSuggestions } from '../../api/me-suggestions';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport PageLoader from '../../shared/PageLoader';\r\nimport ResponsiveHeading from '../../shared/ResponsiveHeading';\r\nimport SlimPageLayout from '../../shared/SlimPageLayout';\r\nimport SuggestionsList from '../../suggestions/SuggestionsList';\r\n\r\nconst SuggestionsPage: React.FC = () => {\r\n  const [suggestions, setSuggestions] = useState<UserResponseDto[] | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const loadSuggestions = useCallback(() => {\r\n    getSuggestions().then((val) => setSuggestions(val.data.suggestions));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadSuggestions();\r\n  }, [loadSuggestions]);\r\n\r\n  return (\r\n    <>\r\n      {!suggestions ? (\r\n        <PageLoader />\r\n      ) : (\r\n        <SlimPageLayout>\r\n          <ResponsiveHeading>Vorschläge für dich</ResponsiveHeading>\r\n\r\n          <SuggestionsList\r\n            suggestions={suggestions}\r\n            loadSuggestions={loadSuggestions}\r\n          />\r\n        </SlimPageLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuggestionsPage;\r\n","import React, { useState } from 'react';\r\nimport { addFollow, deleteFollow } from '../../api/me-followed';\r\nimport { PostResponseDto, UserResponseDto } from '../../api/shared-dtos';\r\nimport Button, { ButtonType } from '../../shared/Button';\r\nimport Profile from '../Profile';\r\n\r\nexport interface UserProfileProps {\r\n  user: UserResponseDto;\r\n  posts: PostResponseDto[];\r\n  followers: UserResponseDto[];\r\n  followed: UserResponseDto[];\r\n  loggedInUsersFollowed: UserResponseDto[];\r\n  reloadUserInformation: () => void;\r\n}\r\n\r\nconst UserProfile: React.FC<UserProfileProps> = ({\r\n  loggedInUsersFollowed,\r\n  user,\r\n  posts,\r\n  followers,\r\n  followed,\r\n  reloadUserInformation: loadLoggedInUsersFollowed,\r\n}) => {\r\n  const [isFollowButtonLoading, setIsFollowButtonLoading] = useState(false);\r\n  const [isUnfollowButtonLoading, setIsUnfollowButtonLoading] = useState(false);\r\n\r\n  const handleFollowButtonClick = async () => {\r\n    setIsFollowButtonLoading(true);\r\n    setIsUnfollowButtonLoading(false);\r\n\r\n    await addFollow(user.userId);\r\n\r\n    await loadLoggedInUsersFollowed();\r\n  };\r\n\r\n  const handleUnfollowButtonClick = async () => {\r\n    setIsUnfollowButtonLoading(true);\r\n    setIsFollowButtonLoading(false);\r\n\r\n    await deleteFollow(user.userId);\r\n\r\n    await loadLoggedInUsersFollowed();\r\n  };\r\n\r\n  const renderButton = () => {\r\n    const doesLoggedInUserFollowUser =\r\n      loggedInUsersFollowed.filter((val) => val.userId === user.userId).length >\r\n      0;\r\n\r\n    return (\r\n      <>\r\n        {doesLoggedInUserFollowUser ? (\r\n          <Button\r\n            isLoading={isUnfollowButtonLoading}\r\n            onClick={handleUnfollowButtonClick}\r\n            buttonType={ButtonType.SecondaryContained}\r\n          >\r\n            Nicht mehr folgen\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            isLoading={isFollowButtonLoading}\r\n            onClick={handleFollowButtonClick}\r\n          >\r\n            Abonnieren\r\n          </Button>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderAvatar = (avatar: JSX.Element) => <>{avatar}</>;\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      posts={posts}\r\n      followers={followers}\r\n      followed={followed}\r\n      renderAvatar={renderAvatar}\r\n      renderButton={renderButton}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { getLoggedInUsersFollowed } from '../../api/me-followed';\r\nimport { UserResponseDto } from '../../api/shared-dtos';\r\nimport { useFetchProfileInformation } from '../../profile/useFetchProfileInformation';\r\nimport UserProfile from '../../profile/UserProfile';\r\nimport NormalPageLayout from '../../shared/NormalPageLayout';\r\nimport PageLoader from '../../shared/PageLoader';\r\n\r\nexport interface UserProfilePageParams {\r\n  userId: string;\r\n}\r\n\r\nconst UserProfilePage: React.FC = () => {\r\n  const match = useRouteMatch<UserProfilePageParams>();\r\n\r\n  const { user, posts, followers, followed, reloadProfileInformation } =\r\n    useFetchProfileInformation(match.params.userId);\r\n\r\n  const [loggedInUsersFollowed, setLoggedInUsersFollowed] = useState<\r\n    UserResponseDto[] | undefined\r\n  >(undefined);\r\n\r\n  const loadLoggedInUsersFollowed = useCallback(() => {\r\n    getLoggedInUsersFollowed().then((val) =>\r\n      setLoggedInUsersFollowed(val.data.followed)\r\n    );\r\n  }, []);\r\n\r\n  const reloadUserInformation = () => {\r\n    reloadProfileInformation();\r\n\r\n    loadLoggedInUsersFollowed();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLoggedInUsersFollowed();\r\n  }, [loadLoggedInUsersFollowed]);\r\n\r\n  return (\r\n    <>\r\n      {!user || !posts || !followers || !followed || !loggedInUsersFollowed ? (\r\n        <PageLoader />\r\n      ) : (\r\n        <NormalPageLayout>\r\n          <UserProfile\r\n            user={user}\r\n            posts={posts}\r\n            followers={followers}\r\n            followed={followed}\r\n            loggedInUsersFollowed={loggedInUsersFollowed}\r\n            reloadUserInformation={reloadUserInformation}\r\n          />\r\n        </NormalPageLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route, RouteProps } from 'react-router';\r\nimport { ReduxState } from '../../config/store';\r\nimport { buildLoginPath } from '../../routes/path';\r\n\r\ninterface ProtectedRouteProps extends RouteProps {}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  children,\r\n  ...rest\r\n}) => {\r\n  const loggedInUserId = useSelector(\r\n    (state: ReduxState) => state.authenticationState.loggedInUserId\r\n  );\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {!loggedInUserId ? <Redirect to={buildLoginPath()} /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport IndexPage from '../pages/IndexPage';\r\nimport LoginPage from '../pages/LoginPage';\r\nimport MyProfilePage from '../pages/MyProfilePage';\r\nimport NewPostPage from '../pages/NewPostPage';\r\nimport RegisterPage from '../pages/RegisterPage';\r\nimport SuggestionsPage from '../pages/SuggestionsPage';\r\nimport UserProfilePage from '../pages/UserProfilePage';\r\nimport ProtectedRoute from '../shared/ProtectedRoute';\r\nimport {\r\n  indexPath,\r\n  loginPath,\r\n  myProfilePath,\r\n  newPostPath,\r\n  registerPath,\r\n  suggestionsPath,\r\n  userProfilePath,\r\n} from './path';\r\n\r\nexport const renderIndexRoute = (route: JSX.Element = <IndexPage />) => (\r\n  <ProtectedRoute path={indexPath} exact>\r\n    {route}\r\n  </ProtectedRoute>\r\n);\r\n\r\nexport const renderRegisterRoute = (route: JSX.Element = <RegisterPage />) => (\r\n  <Route path={registerPath}>{route}</Route>\r\n);\r\n\r\nexport const renderLoginRoute = (route: JSX.Element = <LoginPage />) => (\r\n  <Route path={loginPath}>{route}</Route>\r\n);\r\n\r\nexport const renderSuggestionsRoute = (\r\n  route: JSX.Element = <SuggestionsPage />\r\n) => (\r\n  <ProtectedRoute path={suggestionsPath} exact>\r\n    {route}\r\n  </ProtectedRoute>\r\n);\r\n\r\nexport const renderNewPostRoute = (route: JSX.Element = <NewPostPage />) => (\r\n  <ProtectedRoute path={newPostPath}>{route}</ProtectedRoute>\r\n);\r\n\r\nexport const renderMyProfileRoute = (\r\n  route: JSX.Element = <MyProfilePage />\r\n) => <ProtectedRoute path={myProfilePath}>{route}</ProtectedRoute>;\r\n\r\nexport const renderUserProfileRoute = (\r\n  route: JSX.Element = <UserProfilePage />\r\n) => <ProtectedRoute path={userProfilePath}>{route}</ProtectedRoute>;\r\n","import React from 'react';\r\nimport { IconType } from 'react-icons/lib';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nexport interface HeaderLinkProps {\r\n  Icon: IconType;\r\n  ActiveIcon: IconType;\r\n  to: string;\r\n  dataTestId: string;\r\n}\r\n\r\nconst HeaderLink: React.FC<HeaderLinkProps> = ({\r\n  Icon,\r\n  ActiveIcon,\r\n  to,\r\n  dataTestId,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n\r\n  const size = 24;\r\n  const isActive = pathname === to;\r\n\r\n  return (\r\n    <NavLink data-testid={dataTestId} exact to={to} className='header-link'>\r\n      {isActive ? <ActiveIcon size={size} /> : <Icon size={size} />}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default HeaderLink;\r\n","import React from 'react';\r\nimport { BsPlusCircle, BsPlusCircleFill } from 'react-icons/bs';\r\nimport { useHistory } from 'react-router';\r\nimport { NewPostPageState } from '../../../pages/NewPostPage';\r\nimport { buildNewPostPath, buildNewPostPathname } from '../../../routes/path';\r\nimport HiddenImageInput from '../../HiddenImageInput';\r\nimport { useHiddenInput } from '../../hooks/useHiddenInput';\r\nimport { useReadFileFromEvent } from '../../hooks/useReadFileFromEvent';\r\nimport InvisibleButton from '../../InvisibleButton';\r\nimport HeaderLink from '../HeaderLink';\r\nimport './style.scss';\r\n\r\nconst AddNewPostLink = () => {\r\n  const history = useHistory();\r\n  const { readFileFromEvent } = useReadFileFromEvent();\r\n\r\n  const { fileInputRef, pretendClickOnFileInput } = useHiddenInput();\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    readFileFromEvent(e, (dataUri) => {\r\n      const state: NewPostPageState = {\r\n        selectedImageDataUri: dataUri,\r\n      };\r\n\r\n      history.push(buildNewPostPath(state));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <InvisibleButton onClick={() => pretendClickOnFileInput()}>\r\n      <HiddenImageInput\r\n        ref={fileInputRef}\r\n        onChange={handleInputChange}\r\n        data-testid='hidden-new-post-input'\r\n      />\r\n\r\n      <div className='add-new-post-link__prevent-click' />\r\n      <HeaderLink\r\n        Icon={BsPlusCircle}\r\n        ActiveIcon={BsPlusCircleFill}\r\n        to={buildNewPostPathname()}\r\n        dataTestId='new-post-page-link'\r\n      />\r\n    </InvisibleButton>\r\n  );\r\n};\r\n\r\nexport default AddNewPostLink;\r\n","import React from \"react\";\r\nimport {\r\n  BsHeart,\r\n  BsHeartFill,\r\n  BsHouseDoor,\r\n  BsHouseDoorFill,\r\n  BsPerson,\r\n  BsPersonFill,\r\n} from \"react-icons/bs\";\r\nimport {\r\n  buildIndexPath,\r\n  buildMyProfilePath,\r\n  buildSuggestionsPath,\r\n} from \"../../routes/path\";\r\nimport Logo from \"../Logo\";\r\nimport AddNewPostLink from \"./AddNewPostLink\";\r\nimport HeaderLink from \"./HeaderLink\";\r\nimport \"./style.scss\";\r\n\r\ninterface HeaderProps {}\r\n\r\nconst Header: React.FC<HeaderProps> = () => {\r\n  return (\r\n    <div className=\"header__page-padding\">\r\n      <div className=\"header\">\r\n        <div className=\"header__content-wrapper\">\r\n          <Logo size=\"2rem\" />\r\n\r\n          <div className=\"header__links\">\r\n            <HeaderLink\r\n              Icon={BsHouseDoor}\r\n              ActiveIcon={BsHouseDoorFill}\r\n              to={buildIndexPath()}\r\n              dataTestId=\"index-page-link\"\r\n            />\r\n\r\n            <AddNewPostLink />\r\n\r\n            <HeaderLink\r\n              Icon={BsHeart}\r\n              ActiveIcon={BsHeartFill}\r\n              to={buildSuggestionsPath()}\r\n              dataTestId=\"suggestions-page-link\"\r\n            />\r\n            <HeaderLink\r\n              Icon={BsPerson}\r\n              ActiveIcon={BsPersonFill}\r\n              to={buildMyProfilePath()}\r\n              dataTestId=\"my-profile-page-link\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport {\r\n  renderIndexRoute,\r\n  renderLoginRoute,\r\n  renderMyProfileRoute,\r\n  renderNewPostRoute,\r\n  renderRegisterRoute,\r\n  renderSuggestionsRoute,\r\n  renderUserProfileRoute,\r\n} from '../../routes/renderers';\r\nimport Header from '../../shared/Header';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      {renderLoginRoute()}\r\n      {renderRegisterRoute()}\r\n      <Route>\r\n        <Header />\r\n        <Switch>\r\n          {renderIndexRoute()}\r\n          {renderSuggestionsRoute()}\r\n          {renderNewPostRoute()}\r\n          {renderMyProfileRoute()}\r\n          {renderUserProfileRoute()}\r\n        </Switch>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { CloudinaryContext } from \"cloudinary-react\";\r\nimport React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"../routes/Routes\";\r\nimport \"./style.scss\";\r\n\r\n// TODO: public folder\r\nconst App = () => {\r\n  return (\r\n    <CloudinaryContext cloudName={process.env.REACT_APP_CLOUD_NAME}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Routes />\r\n      </BrowserRouter>\r\n    </CloudinaryContext>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport { applicationPersistor, applicationStore } from './config/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider store={applicationStore}>\r\n      <PersistGate loading={null} persistor={applicationPersistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}